AWS Solution Architect Pro


AWS Tracks

Pro     AWS Cert Solutions Arch - Pro          AWS Certified DevOps Engineer - Pro
Assoc   AWS Cert Solutions Arch - Assoc        Dev - Assoc       SysOps Admin - Assoc
            Solution Architect                 Developer         SysOps Administrator


https://www.pluralsight.com/courses/aws-system-admin-fundamentals
https://www.pluralsight.com/courses/aws-certified-sysops-admin-associate



170 min exam
$300 Exam Fee
$40 Practice exam

Exam Guide:

https://aws.amazon.com/certification/certified-solutions-architect-professional


##########################################################################
## Elastic Load Balancer (ELB)
##########################################################################

Characteristics:
  - Region wide load balancer
      - Can use across AZs in same region
  - Can be used internally or externally (private / public IP)
  - SSL Termination and processing (Layer 7 functionality)
      - ELB handles SSL processing
  - Cookie-based sticky session
      - User session routed to specific instance
  - Integrates w/ Auto Scaling
  - ELB EC2 health checks / Amazon CloudWatch  (advanced metric load balancing)
  - Integrates w/ Route 53  (Cloud based DNS load balancing )

Supported Ports:
    - 25 (SMTP)
    - 80 / 443 (HTTP / HTTPS)
    - 1024 - 65535

- Does not support EIP / public IP / only DNS

- Supports domain Zone Apex (can do pluralsight.com [without www.])

- Supports IPv4 and IPv6 (VPC does not support IPv6 yet)

- Integrates with CloudTrail for log security

- Multiple SSL certificates require multiple ELBs
    - Wildcard certificates are Supported (*.pluralsight.com)



    AWS Cloud
 +---------------------------------------------------------------------------+
 |                                                                           |
 |      +--------------------------------------------------------------+     |
 |      |                                                              |     |
 |      |                   +---------------------------------+        |     |
 |      |                   |               +---+             |        |     |
 |      |                   |    +--------> |   |             |        |     |
 |      |     +---+         |    |          +---+             |        |     |
 |      |     |   |         |    |                            |        |     |
 |      |     | E |         |    |                            |        |     |
 |      |     | L +--------------------->   +---+             |        |     |
 |      |     | B |         |    |          |   |             |        |     |
 |      |     |   |         |    |          +---+             |        |     |
 |      |     +---+         |    |                            |        |     |
 |      |   (HealthCheck)   |    |                            |        |     |
 |      |                   |    |          +---+             |        |     |
 |      |                   |    +--------> |   |             |        |     |
 |      |                   |               +---+             |        |     |
 |      |                   +---------------------------------+        |     |
 |      |                                     Availability Zone        |     |
 |      |                                                              |     |
 |      +--------------------------------------------------------------+     |
 |                                                             REGION        |
 +---------------------------------------------------------------------------+
ELB across EC2 instances (single AZ)



 AWS Cloud
+---------------------------------------------------------------------------+
|                                                                           |
|      +--------------------------------------------------------------+     |
|      |                                                              |     |
|      |                         +---------------------------+        |     |
|      |                         |                           |        |     |
|      |                         | +---+                     |        |     |
|      |                         | |   |  +----+             |        |     |
|      |     +---+        +----> | +---+  |    |   +---+     |        |     |
|      |     |   |        |      |        +----+   |   |     |        |     |
|      |     | E |        |      |                 +---+     |        |     |
|      |     | L +--------+      +---------------------------+        |     |
|      |     | B |        |                              AZ 1         |     |
|      |     |   |        |      +---------------------------+        |     |
|      |     +---+        |      |                           |        |     |
|      |                  |      |  +---+                    |        |     |
|      |                  +----> |  |   |   +----+           |        |     |
|      |                         |  +---+   |    |  +---+    |        |     |
|      |                         |          +----+  |   |    |        |     |
|      |                         |                  +---+    |        |     |
|      |                         +---------------------------+        |     |
|      |                                                  AZ 2        |     |
|      +--------------------------------------------------------------+     |
|                                                             REGION        |
+---------------------------------------------------------------------------+
ELB across Availability Zones


AWS Cloud
+---------------------------------------------------------------------------+
|                                                                           |
|      +--------------------------------------------------------------+     |
|      |                         +-------------------------+          |     |
|      |                         |  |---| |---|  |---|     |          |     |
|      |     +---+         +---> |  |---| |---|  |---|     |          |     |
|      |     | E |         |     +-------------------------+ AZ 1     |     |
|      |     | L |         |                                          |     |
|  D   |     | B +---------+     +-------------------------+          |     |
|  N   |     +---+         |     |  |---| |---|  |---|     |          |     |
|  S   |                   +---> |  |---| |---|  |---|     |          |     |
|      |                         +-------------------------+ AZ 2     |     |
|  B   +--------------------------------------------------------------+     |
|  A                                                          Region 1      |
|  S    +--------------------------------------------------------------+     |
|  E   |                         +--------------------------+         |     |
|  D   |                         |  |---| |---|  |---|      |         |     |
|      |     +---+         +---> |  |---| |---|  |---|      |         |     |
|  L   |     | E |         |     +--------------------------+ AZ 3    |     |
|  O   |     | L +---------+                                          |     |
|  A   |     | B |         |     +--------------------------+         |     |
|  D   |     +---+         |     |  |---| |---|  |---|      |         |     |
|  B   |                   +---> |  |---| |---|  |---|      |         |     |
|  A   |                         +--------------------------+ AZ 4    |     |
|  L   +--------------------------------------------------------------+     |
|                                                              Region 2     |
+---------------------------------------------------------------------------+

DNS Based Load Balancing w/ Multiple ELB across Regions





##########################################################################
## VPC and Direct Connect
##########################################################################

Virutal Private Cloud Overview:
  - Logically isolated network in AWS cloud (master subnet)
  - Control of network architecture (create smaller subnets)
  - Enhanced security
      - via security groups
      - security groups applied to resources (EC2, ELBs)
      - Network Access Control Lists (NACL)
            - filter traffic at subnet level
  - Internetwork with other organizations (via VPC Peering)
      - connect two VPCs together
  - Elastic IP address (Public IP addr)
  - Enable hybrid cloud (site to site VPN)
  - Single tenant dedicated server hardware
  - VPC Cost = $0 / VPN = $0.05/hr


##  VPC Peering

+---------------------------------------------------------------------------+
|                            +-------------------+                          |
|                            |                   |                          |
|                +---------> |                   | <---------+              |
|                |           |       VPC 2       |           |              |
|                |           |                   |           |              |
|                |           +-------------------+           |              |
|                v                                           v              |
|       +--------+-------------+                +------------+-------+      |
|       |                      |                |                    |      |
|       |         VPC 1        |  x x x x x x   |        VPC 3       |      |
|       |                      |                |                    |      |
|       +----------------------+                +--------------------+      |
+---------------------------------------------------------------------------+
                                                              REGION

- Single Region Inter-VPC Routing
- Same or different AWS Accounts
- NO Transitive peering
- NO overlapping network addresses (different CIDR blocks)
- Default:  50 VPC peers per VPC / can request raise to 125

Private DNS entries cannot be resolved between VPC peers

Can update inbound / outbound rules for your VPC security groups to reference
security groups in the peered VPC.  (Can access resources in other VPC sec grp)


##  AWS VPC Access / VPN TypesVPC Types


AWS VPC ACCESS

                   VPN                                     Gateways
+-----------------+   +----------------+     +--------------------------------+
|                 |   |                |     |                                |
|  Hardware-based |   |     Direct     |     |            Internet            |
|       VPN       |   |     Connect    |     |            Gateway             |
+-----------------+   +----------------+     +--------------------------------+

+-----------------+   +----------------+     +--------------+   +-------------+
|                 |   |                |     |              |   |             |
|       VPN       |   |     Software   |     |   Virtual    |   |   Customer  |
|     CloudHub    |   |       VPN      |     |   Private    |   |   Gateway   |
|                 |   |                |     |   Gateway    |   |             |
+-----------------+   +----------------+     +--------------+   +-------------+



VPN Types


                                                                       +--------+
                                                                       |        |
                                                                       | Branch |
                                  Private Connection                   | Office |
        +------------------------------------------------------------- +        | +-------+
        |                                                              |        | |  CSP  |
        |                                                              |        | |       |
        v                                                              +--------+ +-------+
+------------+
|            |           +---------------------------------+
|            +-----------+                                 |         +--------+
|  Corporate +-----------+            INTERNET             |   Site  |        |
|  Data      |           |                                 +---------+        |
|  Center    |           +-----------------+---------------+    to   |        |
|            |                             |                   Site  | Branch |
|            |                             |                         | Office |
|            |                             |                         |        |  +----------------+
+------------+                             |                         |        |  | Cloud          |
                                      +----+-----+                   |        |  | Service        |
                                      |          |                   |        |  | Provider (CSP) |
                                      |  Remote  |                   +--------+  +----------------+
                                      |  Access  |
                                      |          |
                                      +----------+

- Remote Access
- Site to Site
- Private Line



AWS VPC Access


                                                                       +--------+
                                                                       |        |
                                                                       |        |
                                  Private Connection                   |  AWS   |
        +------------------------------------------------------------- +        |
        |                          (Direct Connect)                    |        |
        |                                                              +--------+
        v
+------------+                                                         (Internet
|            |           +---------------------------------+ Site to    Gateway)
|            +-----------+                                 |   Site    +--------+
|  Corporate +-----------+            INTERNET             +-----------+        |
|  Data      |           |         (VPN Connection)        +- ---------+        |
|  Center    | Customer  +-----------------+---------------+ Hardware  |   AWS  |
|            | Gateway                     |                  based    |        |
|            |                             |                  VPN*     |        |
|            |                             |                           +--------+
+------------+                             |                           (Virtual
                                      +----+-----+                      Private
                                      |          |                      Gateway)
                                      |  Remote  |
                                      |  Access  |
                                      |          |
                                      +----------+

*NOTE: For hardware based VPN on AWS side will be setup with port redundancy.
       Direct Connect by default does NOT have port redundancy.




##  AWS Direct Connect
 - Predictable bandwidth
 - Predictable performance / consistent network experience
 - 1 Gbps or 10Gbps
 - Less than 1Gbps through AWS Partner Network (APN)
 - Support for VLAN Trunking (802.1Q)
 - Direct Connect can be partitioned into multiple virtual interfaces (VIFS)





[] Private Connection / Direct Connect
                                                                 +--------+
+------------+                                                   |        |
| Corporate  |                   Private Connection              |  AWS   |
| Data       +---------------------------------------------------+        |
| Center     |                    (Direct Connect)               |        |
+------------+                                                   +--------+



[] Co-location / Direct Connect
                                    +----------+                 +--------+
+------------+                      |          |                 |        |
| Corporate  | Private Connection   | Co-      | Direct Connect  |  AWS   |
| Data       +----------------------+ Location +-----------------+        |
| Center     |                      |          |                 |        |
+------------+                      +----------+                 +--------+



Direct Connect Deep Dive:
https://youtu.be/SMvom9QjkPk
https://aws.amazon.com/directconnect


[] Virtual Interfaces / Direct Connect

Can partition Direct Connect across VLANs


+---------------------------------------+               +-----------------------------------------+
|                                       |               | AWS                                     |
|                                       |               |    +-------------------------------+    |
|                                       |           +------> |                               |    |
|          +---------------+            |           |   |    |   S3       EC2      DynamoDB  |    |
| +------+ |               |  +-------+ |  Public   |   |    |           Public              |    |
| |      | |  +---------+  |  |       | |  VIF      |   |    |                               |    |
| |      | |  |  VLAN 1 |  |  |       +------------>+   |    +-------------------------------+    |
| | Cust | |  +---------+  |  | Direct| |               |                                         |
| |Router+-+               +--+       | |               |                                         |
| |      | |  +---------+  |  |Connect| |               |    +-------------------------------+    |
| |      | |  |  VLAN 2 |  |  |       +-------------+   |    |                               |    |
| |      | |  +---------+  |  |       | |  Private  |   |    |  VPC            EC2           |    |
| +------+ |               |  +-------+ |  VIF      |   |    |               Private         |    |
|          +---------------+            |           |------> |                               |    |
|                                       |               |    +-------------------------------+    |
|                                       |               |                                         |
+---------------------------------------+               +-----------------------------------------+




##  AWS VPN CloudHub
+-------------+
|             |                                                      +------------+
|  Corporate  |                                                      |            |
|  Data       |                                                      |            |
|  Center     +------------------------------------------------------+    VPC     |
|             |                                                      |            |
|             |                                +-------------------> |            |
+-------------+   (Hardware                    |                     +------------+
                   Based VPN)                  |
                                               |
                   +------------+--------------+
                   |            |              |
             +-----+--+     +---+----+     +---+----+
             |        |     |        |     |        |
             | Branch |     | Branch |     | Branch |
             | Office |     | Office |     | Office |
             |        |     |        |     |        |
             +--------+     +--------+     +--------+





##########################################################################
## NAT Instances and NAT Gateways
##########################################################################


NAT Gateway:   AWS Service / Amazon handles all details (High Availability / resiliancy)
NAT Instance:  Developer responsible for NAT functionality

Removing VPC NAT Bottlenecks:
  - Increase instance size
  - Choose instance that supports enhanced netowrking
  - Add NATs / subnets and migrate workloads (1 subnet - 1 NAT)

  HA for NAT is possible

  Subnet failover to another NAT is supported:
  https://aws.amazon.com/articles/2781451301784570
  https://aws.amazon.com/articles/high-availability-for-amazon-vpc-nat-instances-an-example/


## NAT Instances vs NAT Gateways

  NAT instances                           NAT Gateways
  ==============                          ==============
  - Use a script to manage failover       - Highly Available. NAT gateways in each
    between instances                       each AZ are implemented with redundancy

  - Depends on the bandwidth of the       - Supports bursts of up to 10Gbps
    instance type

  - Managed by you                        - Managed by AWS

  - A generic Amazon Linux AMI that's     - Software is optimized for handling NAT Traffic
    configured to perform NAT

  - Manual port forwarding                - Port forwarding is not supported

  - Use as a bastion server               - Bastion servers not supported

  - View CloudWatch alarms                - Traffic metrics not supported




## Create NAT Instance

1. Create VPC:  name: XYZ_vpc  / CIDR: 192.168.0.0/16  tenancy: default

2a. Create Subnet:  name: DMZ_subnet
                    VPC: XYZ_vpc
                    AZ: us-east-1b
                    CIDR: 192.168.1.0/24

2b. Create Subnet:  name: DB_subnet
                    VPC: XYZ_vpc
                    AZ: us-east-1c
                    CIDR: 192.168.2.0/24

3. Create Internet GW:  name: INET_gw
                        attach to VPC: XYZ_vpc

4. Create Route Table:  name: DMZ_rtbl
                        VPC: XYZ_vpc

5. Add Route:  destination: 0.0.0.0
               target: INET_gw

6. Add Subnet Assoc:  Edit
                       select DMZ_subnet

7. Create EC2 instance:  name: webserver
                         Network: XYZ_vpc
                         Subnet:  DMZ_subnet
                         Auto assign Public IP:  ENABLE
                         sec group:  create new
                              name: web_secgrp
                              TYPE: RDP / HTTP / HTTPS

8. Create EC2 instance:  name: dbserver
                         Network: XYZ_vpc
                         Subnet:  DB_subnet
                         Auto assign Public IP:  Use subnet setting
                         sec group:  create new
                              name: db_secgrp
                              TYPE: RDP

9. Create EC2 instance: > Community AMI >  "NAT > " amzn-ami-vpc-nat-hvm-*
                         Network: XYZ_vpc
                         Subnet:  DMZ_subnet
                         Auto assign Public IP:  ENABLE
                         name: NAT
                         sec group:  create new
                              name: nat_secgrp
                              TYPE: SSH / HTTP / HTTPS

10. Create route table: VPC > Route Tables > Create Route Table
                         Name: NAT_rtbl
                         VPC:  XYZ_vpc
                         routes > edit > add:
                            destination: 0.0.0.0
                            target:   NAT (instance)

NOTE:  When configuring a NAT, the Source / Dest Check must be diabled because
       of traffic coming from "behind" the NAT.
          > EC2 > Intstances > NAT > (right click) > Networking >
            Source / Dest Check > Disable



## Create NAT Gateway

1. Create NAT Gateway: VPC > NAT Gateways > Create NAT Gateway
                         subnet:  DMZ_subnet
                         Elastic IP Allocation:   [Create New IP]
                         [ Create NAT Gateway ]


2. Update Route Table: VPC > Route Tables > NAT
                         routes > edit > add:
                            destination: 0.0.0.0/0
                            target:   NAT (NAT gw instance)
                          subnet association > DB_subnet
                         [ Save ]



###############################################################################
## Networking Services:  Domain Name System / Route 53
###############################################################################


DNS Default port:  TCP 53 / UDP 53  ==> (hence) Route 53

Route 53: Worldwide distributed DNS  (SLA uptime 100%)

Database of name to IP mappings

Route 53 API

Server health checks


- Public Hosted Zone

- Private Hosted Zone for Amazon VPC (inter VPC name resolution for EC2 instances)

- Can extend on-premises DNS to Amazon VPC

- Cannot extend Route 53 to on-premises

- Cannot automatically register EC2 instances with private hosted zones

                             +
                             |
                             |
+---------------------+      |               +------------+       +-----------------+
|                     |      |               |            |       |                 |
|      On Premise     +--------------------> |    AWS     +-----> |      AWS        |
|         DNS         |      |               |    Route   |       |      VPC        |
|                     |      |               |    53      | <-----+                 |
|                     |      |  +---XXXXX--+ |            |       |                 |
+---------------------+      |               +------------+       +-----------------+
                             |
                             |
                             +
                         Internet


Route 53 Private Hosted Zone

Extend On-premises DNS to EC2 instances



## Add private DNS entry to Route 53 Private Hosted Zone

AWS > Services > Route 53 > DNS Management

1. Create Hosted Zone (Create Hosted Zone > Create Hosted Zone > Create Hosted Zone > )
          Domain Name:  xyz.aws
          Comment:
          Type: Private Hosted Zone for Amazon VPC
          VPC ID: XYZ_vpc
          [Create]

 NOTE:  2 records types created, NS (Name server), SOA

2. Create Record Set to register EC2 instance to private Hosted Zone:
          Name:  dc01.xyz.aws
          Type:  A - IPv4 addresses
          Alias: No
          TTL (Seconds): 300
          Value: 192.168.0.111
          Routing Policy: Simple

          Name:  web01.xyz.aws
          Type:  A - IPv4 addresses
          Alias: No
          TTL (Seconds): 300
          Value: 192.168.0.222
          Routing Policy: Simple

3. Update VPC parameters:   AWS > Services > VPC

          select XYZ_vpc > Actions > Edit DNS Reslolution > [YES]
          select XYZ_vpc > Actions > Edit DNS Hostnames   > [YES]


## Extend On-premises BIND DNS server to EC2 instances

[DNS Server]  -- VPN -- [AWS] -- [EC2]

NOTE:  Make sure security group for instance has DNS port enabled
AWS > Services > VPC > Secuirty Groups > dc_secgrp > inbound rules > Edit
  [Add Another Rule]
  Type: DNS TCP (53)  (and DNS UDP (53))  or ALL Traffic
  Protocol: ALL
  Source: 0.0.0.0/0
  [SAVE]

NOTE: Windows DNS utilizes additional ports outside of TCP/UDP 53 hence ALL Traffic

1. Setup DHCP options for VPC

AWS > Services > VPC >  DHCP Option Sets > [Create DHCP options set]
          Name tag: xyz.com
          Domain Name : xyz.com
          Domain Name Servers : 192.168.0.111
          NTP Servers :
          NetBIOS name servers:
          NetBIOS node type :

2. Associate DHCP Option Set to VPC:
AWS > Services > VPC >
        Select VPC: XYZ_vpc
        [right click] > Edit DHCP Option Set
                     select newly create DHCP Option Set [xyz.com]
                     [Save]

NOTE: VPC can only be associated with 1 DHCP Option Set at a time



###############################################################################
## High Performance Computing
###############################################################################

 - Batch processing of compute intensive workloads
 - Requires high perfromance CPU, network, and storage
 - Jumbo Frames are typically required (9000 bytes of data vs. 1500)
    - typically need access to shared file system
    - use alot of disk I/O
    - Supported on AWS thru enhanced networking
    - Enhance networking is enabled thru single route I/O virtualization (SR-IOV)
      on supported instances
    - Enhance networking only supported on Hardware Virtualization instances (HVM).
      NOT supported on Paravirtualized (PV)

Jumbo Frames:

Enabling Enhanced Networking on Linux Instances in a VPC:
http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/enhanced-networking.html

Enabling Enhanced Networking on Windows Instances in a VPC:
http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/enhanced-networking.html


Placement groups:  Logical grouping of instances in a single availability zone

Allows for low latency and high performance between instances by placing them
close together to each other.

 - Can't span multiple availability zones
 - Name must be unique across AWS account
 - Recommended for application that benefit from low latency, high bandwidth or both
 - Only supported instances that support enhanced networking that can be launched
   into a placement group (C3, C4, D2, I2, M4, E3)
 - Existing instances cannot be moved into a placement group
 - Placement groups cannot be merged
 - Can span peered VPCs but you will not get full bi-section bandwidth
   between instances
 - Reserved instances are supported on an instance level but you cannot explicitly
   reserver capacity for a placement group.


Placement Group Types:

  Cluster: clusters instances into a low-latency group in a single Availability Zone

  Spread:  spreads instances across underlying hardware

  Partition:  spreads instances across logical partitions, ensuring that
              instances in one partition do not share underlying hardware with
              instances in other partitions



AWS > EC2 > Placement Groups
[Create Placement Group]
    Name: XYZ_pgrp

Placement Groups and supported instances
http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html




##########################################################################
## AWS Data Storage Services
##########################################################################

## Storage and Archive

  - S3
  - EBS
  - Glacier
  - AWS Storage Gateway


## S3 Storage Classes:
    - S3 Standard
    - S3 Standard IA (Infrequent Access)
    - S3 RRS (Reduced Redundancy)

                        Standard      Standard-IA        RRS        Glacier
Durability              99.999999999   99.999999999      99.99      99.999999999
Availability SLA        99.9           99                99.9       N/A
Designed for Avail      99.99          99.9              99.99      N/A
Lifecycle               Yes            Yes               Yes        Yes
Retrieval fee           N/A            Per GB            N/A        Per GB
Minimum object size     N/A            128 KB            N/A        N/A
Minimum storage duration  N/A          30 days           N/A        90 days
Maximum object size     5 TB           5 TB              5 TB       N/A
Maximum archive size    N/A            N/A               N/A        4 TB
Facility loss tolerance  2              2                1           1

## S3 features:

  - Versioning  :  (Not on be default, once turned on you can't turn it off, only suspend)
  - Cross-region: replication (CRR)
  - Data lifecycle management  (move data between tiers i.e. RRS / Glacier)
  - MFA delete: (can't delete unless you give 2-factor code to delete)
  - Permissions: granular permissions to users and buckets
  - Time-limited access to objects.



## Optimizing for PUTs

  - Parallelization divides files into smaller parts and uploads them simultaneously
      Any part that fails is restarted without affecting rest of the file

  - Increase resiliency to network errors

  - Move the bottleneck to the network
  - file Chunk-size  25 - 50MB on high bandwidth networks
  - file Chunk-size  10 MB on low bandwidth netorks  - 50MB on high bandwidth networks

## Splitting Files:d
  - Windows:  http://www.hjsplit.org
  - Linux:    http://www.manpagez.com/man/1/split
  - Bucket Explorer:    http://www.bucketexplorer.com
  - CloudBerry S3 Explorer:   http://www.cloudberrylab.com/free-amazon-s3-explorer-cloudfront-IAM.aspx
  - S3 Explorer:   http://www.s3browser.com



## Optimizing for GETs

  - Use Cloudfront:
      - Multiple endpoints globally
      - Low latency endpoints
      - High transfer rates
      - Caches objects from S3
      - Reduces number of GETs

  - Two options of Cloudfront:
      - Real-Time Messaging Protocol (RTMP) distribution (Streaming files, media files)
      - Web distribution (static or dynamic content)


## Parallelizing for GETs
  - Use range-based GETs for multithreaded performance
  - Using the Range HTTP header in a GET request allows you to retrieve a
    specific range of bytes for an object stored in S3
  - Enables you to send multiple GETs at a time
  - Compensates for unreliable networks
  - Maxiximize bandwidth throughput


NOTE: Amazon S3 stores data lexicographically (Alphabetical Order)
    - Randomizing the name increases performance (Add a HEX hash string as a prefix)
    - Reverse the key name string
    - Only applies if you are processing 100 or more requests per second

ex.

NOTE:  will locate files close to each other
yourbucket/2016-18-03/march/photo1.jpg
yourbucket/2016-18-03/march/photo2.jpg
yourbucket/2016-18-03/march/photo3.jpg


## Added HEX Hash, spreads writes
yourbucket/bc66-2016-18-03/march/photo1.jpg
yourbucket/9957-2016-18-03/march/photo2.jpg
yourbucket/1045-2016-18-03/march/photo3.jpg

yourbucket/621787/march/photo1.jpg
yourbucket/621788/march/photo2.jpg
yourbucket/621789/march/photo3.jpg
yourbucket/621790/march/photo4.jpg
yourbucket/621791/march/photo5.jpg
yourbucket/621792/march/photo6.jpg


## Reverse Key Name String
yourbucket/787621/march/photo1.jpg
yourbucket/788621/march/photo2.jpg
yourbucket/789621/march/photo3.jpg
yourbucket/790621/march/photo4.jpg
yourbucket/791621/march/photo5.jpg
yourbucket/792621/march/photo6.jpg



## Securing Amazon S3

  - Bucket Policies: who can download, upload, delete, etc
  - MFA Delete
  - Backing up your bucket to another bucket in a different account


## Amazon EBS

  - Does not need to be attached to an instance
  - Cannot be attached to more than one instance at the same time
  - Can be transferred between Availability Zones
  - EBS volume data is replicated across multiple servers in an Availability Zone
  - Encryption of EBS data volumes, boot volumes, snapshots
  - Designed for an annual failure rate of 0.1% - 0.2% and SLA of 99.95%


## Amazon Glacier

  - up to 1000 vaults per account
  - individual archives can be from 1 byte to 40 TB
  - Integrates with Amazon S3 lifecycle policies

## Amazon Storage Gateway

  - Gateway-Cached Volumes:  retain local copy of most frequent data on premises,
                everything else moved to S3.
  - Gateway-Stored Volumes:  Low latency frequent access to data stored locally
                on storage gateway. Point in time snapshots are backed up to S3.
  - Gateway-Virtual Tape Library: Virtual tape library backed by S3 or Virtual
                tape shelf (backed by Glacier). Storage gateway exposes iSCSI
                interface to backup software.  For frequent access, use Virtual
                Tape Library.  Move Virtual Tape Library (on-premise) to
                Virtual Tape Shelf (off-premise).

AWS Storage Options:
https://media.amazonwebservices.com/AWS_Storage_Options.pdf (permission denied)

https://d1.awsstatic.com/whitepapers/Storage/aws-storage-options.pdf

https://d1.awsstatic.com/whitepapers/Storage/AWS%20Storage%20Services%20Whitepaper-v9.pdf




##########################################################################
## AWS Database Services (RDS)
##########################################################################

## RDS Characteristics:
########################

  - Database engine managed by AWS
  - MySQL, Oracle,  Microsoft SQL, PostgreSQL, MariaDB, Amazon Aurora
  - Multi-AZ Deployment options
  - Ideal for existing applications that rely on traditional
    relational database engines
  - Optimal for new applications with structured data that requires more
    sophisticated querying and joining capabilities
  - Amazon RDS for SQL Server supports Windows authentication
      - Using credentials stored in AWS directory Service for Microsoft Active
        Directory (Enterprise Edition)


## Non-ideal RDS Scenarios:
###########################

 Index & query focus data (DynamoDB)
 Numerous BLOBs (S3)
 Automated Scalability  (DynamoDB)
 Other database platforms (DB2 installed on EC2)
 Complete control (OS Level, utilize EC2 instance)


## Multi-AZ failover
###########################

 - Multi-AZ deployment designed for High Availability
 - Synchronous replica in secondary availability zone (master / slave )
 - Used for disaster recovery, NOT for scaling
 - Multi-AZ is different from an RDS read replica


## RDS Read Replicas
#####################

+------+            +------+
|      |            |      |
|  M   |  +-------+ |  R   |
|      |            |      |
+------+            +------+

  - Used for scaling out, not for disaster recover
  - Asynchronous replication / Read-only connections


## ACID
#####################

  - Atomicity, Consistency, Isolation, Durability
    properties that guarantee that database transactions are processed reliably



## Dynamo DB
#####################

  - DynamoDB is fully managed, highly available and scalable NoSQL database
  - Automatically / Synchronously replicates data across three Availability Zones
  - SSDs and limiting indexing on attributes provides high throughput and low latency
  - ElastiCache can be sued in front of DynamoDB in order to offload hight
    amounts of reads for non-frequently changed data

  Ideal for:
    - flexible NoSQL db with low read / write latencies
    - Ability to scale storage and throughput up or down as needed without code
      changes or downtime.

  Use cases :
    - IoT
    - Gaming
    - Live voting
    - Mobile Apps
    - Digital Ad serving

  Non-Ideal for:
    - Prewritten application tied to a traditional relational db
    - Joins and/or complex transactions
    - BLOB data (S3 better)
    - Large data with low I/O rate

  DynamoDB Integration :
    - Amazon Elastic MapReduce
    - Amazon Redshift
    - Amazon Data Pipeline (automates data into/out of DynamoDB)
    - Amazon S3
    - Management Console and APIs


  DynamoDB Features :
    - Stores structured data in tables, indexed by a primary key
    - Tables are a collection of items and items are made up of attributes (columns)
    - Primary key can be:
        - Single attribute hash key
        - Composite hash-range key
    - Secondary index
    - Streams: keep track of item-level changes (or get list of all changes in last 24 hrs ??)
    - Cross-region Replication: replicate across regions / low latency access in multiple endpoints
    - Triggers: integrate with Lambda. Item event will cause a trigger
    - Schema-less:  flexible schema

    Two Ways to Search
        - Query Operation: finds items in a table using primary key attributes
        - Scan Operation : reads every item in a table or secondary index.
          Scan performance costly / query more efficient




##########################################################################
## AWS Security Strategies:  Directory Service
##########################################################################

## AWS Directory Service types
##############################
  - AD Connector
  - Simple AD (Samba 4)
  - Microsoft AD

## AD Connector:
##############################
  - Custom federation proxy ( Kerberos / LDAP requests)
  - Connect existing AD environment (proxy from AWS to AD Directory)
  - No information cached on AWS
  - Availability of AD Connector tied to Networking
  - Requires ports to be opened
  - Supports MFA
  Comes in two sizes:
      - Small (up to 500  users)
      - Large (up to 5000 users)

  - Manage AWS resources via IAM role-based access to the console
  - Enforce existing security policies:
      - Password expiration
      - Password history
      - Account lockouts


## Simple AD :
##############################
  Simple AD: stand alone, managed directory powered by Samba 4 Active Directory
             compatible server.

  Simple AD Features:
    - Manage users and group memberships
    - Create / apply group policies
    - Domain-join Amazon EC2 instances
    - Provide Kerberos-based single sign-on
    - Small (500  users)
    - Large (5000 users)
    - No MFA Support
    - No forest / domain trust relationships
    - Cannot transfer FSMO roles
    - Only 2 domain controllers
    - No LDAP-S
    - Schema extension not supported


## Microsoft AD :
##############################
    - Managed Microsoft Active Directory powered by Windows Server 2012 R2
    - Designed to support up to 50K users. (approx 200K directory objects:
      users, groups, computers)
    - Run directory-aware Windows workload
    - Create trust relationships between Microsoft AD domains in the AWS cloud,
      and on-premises
    - Deployed across multiple AZs
    - AWS automates monitoring / detects and replaces DCs that fail
    - Data replication and automated daily snapshots are configured for you
    - No software to install
    - AWS handles all of the patching and software updates




#############################################################################
## AWS Security Strategies:  Security Token Services and Cross Account Access
#############################################################################

## Security Token Service (STS):
#################################
    - Federated temporary acess to AWS resources
    - Enterprise identity federation:
        - SAML 2.0
        - LDAP, AD FS
        - Single Sign On (SSO)

    - Web identity federation:
        - Amazon, Facebook, Google, OpenID

    - Cross Account Access:
        - One account can access resources in other accounts

  Federation: combining / joining users from one directory service to another
        ex. AIM <-> AD

  Identity Broker: Trusted 3rd Party, can use to federate multiple directories
        ex.: Have directory use Identity Broker to connect two directories

  Identity Store: List of users / directory

  Identities:  users

NOTE: Using STS to get access to S3 from an application


              +-------------+
              |             |                                  +-------------+
              |             +---------------7----------------> | Amazon S3   |
              |             |          +------------+          |             |
              |             |          |            |          +---^-------+-+
              |             |          |  LDAP      |              |       |
              |             |          |  Directory |              9       8
              |             |          |            |          +-----------v--+
+------+      | Enterprise  |          +------^-----+          |              |
|      |      | Application |                 |                |   AWS IAM    |
| User +--1--->             |                 3                |              |
|      |      |             |                 |                +--------------+
+------+      |             |          +------+-----+
              |             | <--6---+ |            |          +--------------+
              |             |          |   Identity | <---5----+              |
              |             |          |   Broker   |          |   AWS STS    |
              |             | +--2---> |            +-----4--> |              |
              +-------------+          +------------+          +--------------+

Steps:
  1. User submits credentials to application
  2. Application sends credentials to Identity Broker (Trusted 3rd party software)
  3. Identity Broker validates credentials w/ Directory it is configured to
  4. Once credentials are validated/ credentials sent to Secure Token Service (STS)
  5. Once validated STS will issue: Access Key, Secure Access Key, Token and duration
  6. Identity Broker returns STS credentials back to application
  7. Application will utilize STS credentials to connect to S3
  8. S3 will confirm STS credentails against AWS IAM privileges
  9. IAM confirms back to S3 privileges users has

NOTE: STS service integrates with IAM

STS Service returns:
  - Access Key
  - Secret Access Key
  - Token
  - Duration (1 - 36 hrs)


## Cross Account Access
########################

Steps to setup Dev Access to Prod (need 2 aws accounts)

## On Dev Account
1. IAM > Groups > Create New Group >
              Group Name:  DevGrp
              Attach Policy:  [X] AdministratorAccess
              [Create Group]

2. IAM > Users > Create New User >
              User Name:  John_dev
              [Create]

3. IAM > Users > John_dev
              [Security Credentials]
              [Manage Password]
              [Assign a customer password]
              Password:  12345
              Confirm Password:  12345
              [Apply]

4. IAM > Users > John_dev  > [Groups]
              [Add User to Groups]
              [X] DevGrp
              [Add to Groups]

NOTE: John created and in DevGrp which has Admin Access

5. Go to Dev Access Account > My Account:
              Copy Account Id: 998877665544


## On Prod Account

6. Prod Account > IAM > Roles >
              [Create new Role]
              Role Name: DevAccess
              [Next]
              Select Role Type:
              [x] Role for Cross-Account Access
              [x] Provide access between AWS accounts you own
              [Select]
              Account ID: 998877665544   # NOTE: Copy Dev Account ID from above
              [Next]
              Attach Policy:
              [x] AmazonEC2ReadOnlyAccess
              [Next]
              [CreateRole]


# NOTE: Need to update Dev Group or User so they can assume new Prod DevAccess Role

7. Copy DevAccess RoleARN: Prod Account > IAM > Roles > DevAccess
              Copy Role ARN:  arn:aws:iam::1234567876543:role/DevAccess


## NOTE: Switch back to Dev Account

8. Dev Account > IAM > Policies >
              [Create Policy]
              [Policy Generatory Select]
              Edit Permissions:
                  AWS Service: AWS Security Token Service
                  Actions:     AssumeRole
                  Amazon Resource Name (ARN):  arn:aws:iam::1234567876543:role/DevAccess
                  NOTE: pasting DevAccess ARN from Prod Account
              [Add Statement]
              [Next]
              [Create Policy]
              NOTE: policygen-12345

NOTE:  Attach policy to group or user:

9a. Dev Account > IAM > Users >
              [x] John_dev
              [Permissions]
              [Attach Policy]
              [x] policygen-12345
              [Attach Policy]

9b. Dev Account > IAM > Groups >
              [x] DevGrp
              [Permissions]
              [Attach Policy]
              [x] policygen-12345
              [Attach Policy]

# NOTE:  Attached policy on a Dev Account Group that has an ARN from Prod Account

# Sign in using John_dev user:
10. Dev Account > IAM > Dashboard > copy IAM User signin link:
              IAM users sign-in link: https://998877665544.signing.aws.amazon.com/console


11. Sign in as John_dev against account  998877665544
              Account: 998877665544
              User Name: John_dev
              Password: pass
              [Sign In]


# NOTE:  Once signed in as Dev User (John_dev) assume Prod Account Role.
         Copy access link from Prod Account

12. Prod Account > IAM > Roles > DevAccess:
              Give this link to users who can
              switch roles in the console:
                 https://signin.aws.amazon.com/switchrole?account=112233&roleName=DevAccess
              [Copy URL]

# NOTE:  Once switch role URL from Prod Account has been copied,
         from Dev Account past URL into browser


13. Paste URL:    https://signin.aws.amazon.com/switchrole?account=112233&roleName=DevAccess
              Switch Role
              Account: 112233
              Role: DevAccess
              Color: [pink]
              [Switch Role]


# NOTE:  You will now be logged into Prod Account with DevAccess Role






#############################################################################
## AWS Security Strategies:  CloudTrail & CloudWatch
#############################################################################

## Cloud Trail
########################

CloudTrail:  A web service that records AWS API calls for your account and
delivers log files to you.  CloutTrail can log every API call on AWS.
Information recorded:
    - identity of the API caller
    - time of the API call
    - source IP address of the API call
    - The request parameters
    - The response elements returned by the AWS service

NOTE: NOT enabled by default.  Can be enabled per region.

CloudTrail logs calls from the following:
    - AWS Management Console
    - AWS SDKs
    - Command line tools
    - Higher-level AWS services (such as CloudFormation)

## Cloud Watch
########################

CloudWatch:  Monitoring service for AWS cloud resources and applications run on
AWS.  CloudWatch Logs can receive logs from CloutTrail and filter thru for
keywords etc. and create metrics against filters and take action.
CloudTrail does the following:
    - Collect and track metrics
    - Set Alarms
    - Collect and monitor log files
    - Automatically react to changes in your AWS resources

CloudWatch monitors:
    - Amazon EC2 instances
    - Amazon DynamoDB tables
    - Amazon RDS DB instances
    - Customer metrics generated by applications
    - Any log files applications generate

    - Gain system-wide visibility into resource utilization
    - Application performance
    - Operational health


CloudWatch Logs:
    - By default, CloudWatch will store log data indefinitely
    - Alarm history is stored for 14 days
    - CloudTrail logs can be sent to CloudWatch for real-time monitoring
    - CloudWatch metric filers can evaluate CloudTrail Logs for terms, phrases,
      and values.
    - Assign CloudWatch metric to filers

Storing Logs:
    - CloudWatch logs
    - Centralized logging system (Splunk)
    - Custom script and store on S3


Monitoring :
    - Do not store logs on non-persistent disks:
        - EC2 instances root volume
        - Ephemeral stoorage

    - Best Practice:  store logs in CloudWatch or S3

    - CloudTrail can be used across multiple AWS accounts while being pointed
      to a single S3 bucket (requires cross account access)

    - CloudWatch Logs subscription can be used across multiple AWS accounts
      (requires cross account access)



#############################################################################
## AWS Security Strategies:  CloudHSM, DDoS and IDS / IPS
#############################################################################

Note:  CloudHSM = Cloud Hardware Security Module
       DDoS = Distributed Denial of Service
       IDS  = Instrusion Detection System
       IPS  = Instrusion Prevention System


## Cloud HSM
########################

Hardware Security Module (HSM): A physical computing device that safeguards and
manages digital keys for strong authentication and provides cryptoprocessing.

(Manages digital key and encrypts / decrypts continuously)

- HSMs can be used in any application that uses digial keys
- Used to protect high value keys
- HSM Uses:
    - Onboard secure cryptographic key generation
    - Onboard secure cryptographic key storage and management
    - Use of cryptographic and sensitive data material
    - Offloading application servers for complete asymmetric and symmetric
      cryptography.

    - HSM are deployed to manage Transparent Data Encryption (TDE) keys for databases
    - TDE automatically encrypts the data before it is written to the underlying
      storage device and decrypts when it is read from the storage device
    - Oracle requires key storage outside of KMS and integrates with CloudHSM
    - SQL Server requires a key but is managed by RDS after enabling TDE

CloudHSM Overview:
    - Secure key storage
    - Contractual and regulatory compliance
    - On-demand
    - Reliable and durable storage
    - Secure connectivity
    - Improved application performance
    - Integrated
    - Auditable

CloudHSM Details:
    - Single tenant
    - Deployed within VPC
    - VPC Peering is supported
    - Integrates with RDS (SQL and Oralce) and Redshift
    - EBS volume encryption, S3 Object encryption and key management are
      supported but require custom scripting
    - For HA and FT a cluster is required
    - Monitored via syslog



## Distributed Denial of Service (DDoS)
#######################################

Distributed Denial of Service (DDoS): a type of denial of service attack where
multiple compromised systems are used to target a single system.

   - Reflection Attack: compromised servers overwhelm one server
   - Slow Loris Attack: packets sent slowly, server trying to handle slow packets
   - Amplification Attack:  Spoof IP address sends small request packet to
      service i.e. (DNS, NTP, SSDP, SNMP) and response is amplification of
      the initial request.   i.e.  64 byte to DNS, 3K response to target server

   - Flood, Reflection & Amplification Attack:  Attacker uses a botnet to
      send multiple amplifcation requests to DNS, etc. to flood a server.

Mitigation Techniques:

    - Minimize the attack surface, limit DMZ exposure
    - Scale to absorb the attack
    - Protect exposed resources (internet facing)
    - Learn normal behavior (monitor, etc.)
    - Create a plan for attacks


    Minimize the attack surface:
      - Reduce the number of necessary Internet entry points (minimize DMZ points)
      - Eliminate non-critical Internet entry points (move to private)
      - Separate end user traffic from management traffic (utilize bastion or jump server)
      - Obfuscate necessary Internet entryh point to the level that untrusted
        end users cannot access them.
         (i.e. bastion server w/ white-listed IP addresses,  no DNS Names like rdp.example.com )
      - Decouple Internet entry points to minimize the effects of attacks
         i.e. remove single point of failure

    Scale to absorb the attack:
      - Design your infrastructure to scale out and scale up
        (autoscaling group, increase machine side)
      - Attackers have to expend more resources to scale up the attack
      - Attack is spread over a large area (i.e. use Cloudfront)
      - Scaling buys you time to analyze the attack and respond
      - Scaling provides you more redundancy

    Protect exposed resources:
      - CloudFront:  Geo Restriction, whitelist countries that can access
        and/or blacklist countries that cannot access.
      - CloudFront: Origin Access Identity (OAI): create a specific users to access AWS resources
        like S3. Direct access would be denied.
      - Route53: Alias Record Sets.  Alias can be redirected to a more capable ELB.
      - Route53: Private DNS.  Internal DNS names not accessible to Internet.
      - Web Application Firewall (WAF):  Level 7 firewall. Sits in front of EC2 instances
            WAF available as an Amazon Service

    Create a plan for attacks:
      - Validate the architecture and select the techniques that work for your
        infrastructure and application
      - Evaluate the costs for increased resiliency and understand the goals of your defense
      - Know who to contact when an attack happens


## Reference Architecture
##########################

                 +----AWS------------------------------------------------------------------------------------------------------------------------+
                 |                                                                                                                               |
                 |                             +--VPC-----------------------------------------------------------------------------------------+  |
                 |                             |                                                                                              |  |
                 |                             |  +-------------------+                                                                       |  |
                 |                             |  | +---------------+ |                                                                       |  |
                 |                             |  | |  +---------+  | |                                                                       |  |
                 |                             |  | |  | Jump    |  | |                                                                       |  |
+----------------------------------------------------> | Server  |  | |--------------------------------------------+                          |  |
+                |                             |  | |  | EC2     |  | |                                            |                          |  |
[Admin]          |                             |  | |  +---------+  | |    +-------------------------+     +-------v-------+   +------------+ |  |
                 |        +-------+            |  | |               | |    |                         |     | +-----------+ |   | +--------+ | |  |
                 |        |  S3   |            |  | |               | |    |                         |     | |           | |   | |        | | |  |
                 |        +-------+            |  | |               | |    |   +----------+          |     | |           | |   | |        | | |  |
                 |            |                |  | |               | |    |   |          |          |     | |           | |   | |        | | |  |
                 |            |                |  | |               | |    | +---------------------+ |     | | +-------+ | |   | |        | | |  |
                 |            |                |  | |               | |    | | | +------+ |        | |     | | |       | | |   | |        | | |  |
                 |            |                |  | |               | |    | | | |      | |  +---+ | |     | | |       | | |   | | +----+ | | |  |
                 |        +-------------+      |  | |   +--------+  | |    | | | | WAF  | |  |ELB| | |     | | | +---+ | | |   | | |    | | | |  |
[Users]          |        | CloudFront  |      |  | |   | ELB    |  | |    | | | |      | |  +---+ | |     | | | |   | | | |   | | |MS  | | | |  |
+                |        +-------------+      |  | |   +--------+  | |    | | | +------+ |        | |     | | | |Web| | | |   | | |SQL | | | |  |
|                |            |                |  | |               | |    | | |          |        | |     | | | |Srv+ | | |   | | |Srvr| | | |  |
|                |            |                |  | |               | |    | +--------------SecGrp-+ |     | | | +---+ | | |   | | |    | | | |  |
|                |            |                |  | |               | |    |   |          |          |     | | |  EC2  | | |   | | +----+ | | |  |
|                |            |                |  | |               | |    |   |          |          |     | | |       | | |   | |        | | |  |
+--------------------------------------------------------------------------------------------------------------------------------->       | | |  |
                 |            |                |  | |               | |    |   |          |          |     | | +-Cloud-+ | |   | |        | | |  |
                 |         +-------------+     |  | |   +--------+  | |    |   +-+Auto----+          |     | |    Watch  | |   | |        | | |  |
                 |         | Route 53    |     |  | |   |  NAT   |  | |    |      Scaling            |     | +-AutoScale-+ |   | +MS-SQL--+ | |  |
                 |         +-------------+     |  | |   +---+----+  | |    |      Grp                |     |    Grp        |   |  SecGrp    | |  |
                 |                             |  | |       ^       | |    +-------------------------+     +---------------+   +------------+ |  |
                 |                             |  | |       |       | |                                                                       |  |
                 |                             |  | |       |       | |         WAF "sandwich"                  Forward            Backend    |  |
                 |                             |  | |       |       | |         private subnet                Private Subnet   Private Subnet |  |
                 |                             |  | |       |       | |                                                                       |  |
[Internet]       |                             |  | +---Security Grp+ |                                                                       |  |
+                |                             |  |         |         |                                                                       |  |
|                |                             |  +------------+DMZ+--+                                                                       |  |
|                |                             |            |                                                                                 |  |
+-----------------------------------------------------------+                                                                                 |  |
                 |                             |                                                                                              |  |
                 |                             +----------------------------------------------------------------------------------------------+  |
                 +-------------------------------------------------------------------------------------------------------------------------------+

Reference Architecture Notes:

  - Public facing servcies: S3, CloudFront, Route 53
  - Admin traffic separate from users separate from internet
  - NAT handles Internet traffice that doesn't need an IP address
  - Users traffic goes thru CloudFront, ELB, AutoScaling group, WAF, ELB, Web Server, AutoScaling, MS SQL
  - Management traffic goes to Jump Server, then to EC2 instances
    (No CNAME, DNS for Jump Server!!!)




## Intrusion Detection / Prevention System
##########################################

Intrusion Detection System (IDS):  An intrusion detection system (IDS) inspects
  all inbound and outbound network activity and identifies suspicious patterns
  that may indicate a network or system attack from someone attempting to break
  into or compromise a system.



Intrusion Prevention System (IPS):  An intrusion prevention system (IPS) is a
  network security / threat prevention technology that examines network
  traffic flows to detect and prevent vulnerability exploits.


IDS / IPS Reference Architecture


                             +---------------+
                             | S3 Bucket     |
                             | Log Store     |
+--------------+             +---------------+
|              |    +---------------------------------------------------------------------------------------------VPC----------+
|   Security   |    |                 ^-------+                                                                                |
|   Operation  |    |                         |                                                                                |
|   Center     |    |          +-------------------------------------------------------------------------------------------+   |
|   (SOC)      |    |          |              |                                                                            |   |
|              |    |          |              |                                                                            |   |
+-----+--------+    |          |   +---------------------------------+         +-------------------------------+           |   |
      |             |          |   |          |                      |         |                               |           |   |
      |             |          |   |    +-----+-------+              |         |                               |           |   |
      |             |          |   |    |             |              |         |                               |           |   |
      |             |          |   |    |   IDS /     +---------------------------------------+                |           |   |
      +-------------------------------->+   IPS       |              |         |              |   [Agents]     |           |   |
                    |          |   |    |             |              |         |              |                |           |   |
                    |          |   |    |             |              |         |              |                |           |   |
                    |          |   |    +-------------+              |         |           +--v----------+     |           |   |
                    |          |   |                                 |         |           |             |     |           |   |
                    |          |   |                     +--------+  |         |           |             |     |           |   |
                    |          |   |                     |        |  |         |           |   EC2       |     |           |   |
                    |          |   |                     |  ELB   | +--------------------> |             |     |           |   |
                    |          |   |    +-------------+  |        |  |         |           |   Instances |     |           |   |
                    |          |   |    |             |  +--------+  |         |           |             |     |           |   |
                    |          |   |    |  Bastion    |              |         |           +-------------+     |           |   |
                    |          |   |    |  Server     |              |         |                               |           |   |
                    |          |   |    |             |              |         |                               |           |   |
                    |          |   |    +-------------+              |         |                               |           |   |
                    |          |   |                                 |         |                               |           |   |
                    |          |   |     +------------+              |         |                               |           |   |
                    |          |   |     |            |              |         |                               |           |   |
                    |          |   |     |   NAT      |              |         |                               |           |   |
                    |          |   |     |            |              |         |                               |           |   |
                    |          |   |     +------------+              |         |           Private             |           |   |
                    |          |   |                                 |         |           Subnet              |           |   |
                    |          |   +-------------------------DMZ-----+         +-------------------------------+           |   |
                    |          +-----------------------------------------------------------------------------Availability--+   |
                    |                                                                                        Zone              |
                    +----------------------------------------------------------------------------------------------------------+



Agents sends logs to IDS / IPS to S3 buckets

AWS Best Practices for DDoS Resiliency:

https://d0.awsstatic.com/whitepapers/DDoS_White_Paper_June2015.pdf 



.
